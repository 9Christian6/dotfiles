[variant] Loaded new set of variants
[kit] Successfully loaded 1 kits from /home/christian/.local/share/CMakeTools/cmake-tools-kits.json
[proc] Executing command: /bin/x86_64-linux-gnu-gcc-9 -v
[cmakefileapi-driver] This version of CMake does not support the "toolchains" object kind. Compiler paths will be determined by reading CMakeCache.txt.
[main] Configuring folder: Bachelor-Arbeit 
[proc] Executing command: /usr/bin/cmake --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_BUILD_TYPE:STRING=Debug -DCMAKE_C_COMPILER:FILEPATH=/bin/x86_64-linux-gnu-gcc-9 -DCMAKE_CXX_COMPILER:FILEPATH=/bin/x86_64-linux-gnu-g++-9 -H/home/christian/Desktop/Bachelor-Arbeit -B/home/christian/Desktop/Bachelor-Arbeit/build -G "Unix Makefiles"
[cmake] Not searching for unused variables given on the command line.
[cmake] -- Performing Test COMPILER_SUPPORT_std=cpp03
[cmake] -- Performing Test COMPILER_SUPPORT_std=cpp03 - Success
[cmake] -- Standard libraries to link to explicitly: none
[cmake] -- Found unsuitable Qt version "" from NOTFOUND
[cmake] -- Could NOT find CHOLMOD (missing: CHOLMOD_INCLUDES CHOLMOD_LIBRARIES) 
[cmake] -- Could NOT find UMFPACK (missing: UMFPACK_INCLUDES UMFPACK_LIBRARIES) 
[cmake] -- Could NOT find KLU (missing: KLU_INCLUDES KLU_LIBRARIES) 
[cmake] -- Could NOT find SuperLU (missing: SUPERLU_INCLUDES SUPERLU_LIBRARIES SUPERLU_VERSION_OK) (Required is at least version "4.0")
[cmake] -- Checking for one of the modules 'hwloc'
[cmake] -- A version of Pastix has been found but pastix_nompi.h does not exist in the include directory. Because Eigen tests require a version without MPI, we disable the Pastix backend.
[cmake] -- Could NOT find SPQR (missing: SPQR_INCLUDES SPQR_LIBRARIES) 
[cmake] -- Found unsuitable Qt version "" from NOTFOUND
[cmake] -- Could NOT find Boost (missing: Boost_INCLUDE_DIR) (Required is at least version "1.53.0")
[cmake] -- Could NOT find GoogleHash (missing: GOOGLEHASH_INCLUDES GOOGLEHASH_COMPILE) 
[cmake] -- Could NOT find Adolc (missing: ADOLC_INCLUDES ADOLC_LIBRARIES) 
[cmake] -- Could NOT find MPFR (missing: MPFR_INCLUDES MPFR_LIBRARIES MPFR_VERSION_OK) (Required is at least version "1.0.0")
[cmake] -- Could NOT find FFTW (missing: FFTW_INCLUDES FFTW_LIBRARIES) 
[cmake] CUDA_TOOLKIT_ROOT_DIR not found or specified
[cmake] -- Could NOT find CUDA (missing: CUDA_TOOLKIT_ROOT_DIR CUDA_NVCC_EXECUTABLE CUDA_INCLUDE_DIRS CUDA_CUDART_LIBRARY) (Required is at least version "7.0")
[cmake] -- Found unsuitable Qt version "" from NOTFOUND
[cmake] -- Qt4 not found, so disabling the mandelbrot and opengl demos
[cmake] -- Could NOT find CHOLMOD (missing: CHOLMOD_INCLUDES CHOLMOD_LIBRARIES) 
[cmake] -- Could NOT find UMFPACK (missing: UMFPACK_INCLUDES UMFPACK_LIBRARIES) 
[cmake] -- Could NOT find KLU (missing: KLU_INCLUDES KLU_LIBRARIES) 
[cmake] -- Could NOT find SuperLU (missing: SUPERLU_INCLUDES SUPERLU_LIBRARIES SUPERLU_VERSION_OK) (Required is at least version "4.0")
[cmake] -- Checking for one of the modules 'hwloc'
[cmake] -- A version of Pastix has been found but pastix_nompi.h does not exist in the include directory. Because Eigen tests require a version without MPI, we disable the Pastix backend.
[cmake] -- ************************************************************
[cmake] -- ***    Eigen's unit tests configuration summary          ***
[cmake] -- ************************************************************
[cmake] -- 
[cmake] -- Build type:        Debug
[cmake] -- Build site:        christian-desktop
[cmake] -- Build string:      linux-5.11.0-38-generic-g++-9.3.0-sse2-64bit
[cmake] -- Enabled backends:  
[cmake] -- Disabled backends: CHOLMOD,  UMFPACK,  KLU,  SuperLU,  PaStiX,  METIS,  SPQR,  Qt4 support,  Boost.Multiprecision,  GoogleHash,  Adolc,  MPFR C++,  fftw,  OpenGL, 
[cmake] -- Default order:     Column-major
[cmake] -- Maximal matrix/vector size: 320
[cmake] -- SSE2:              Using architecture defaults
[cmake] -- SSE3:              Using architecture defaults
[cmake] -- SSSE3:             Using architecture defaults
[cmake] -- SSE4.1:            Using architecture defaults
[cmake] -- SSE4.2:            Using architecture defaults
[cmake] -- AVX:               Using architecture defaults
[cmake] -- AVX2:              Using architecture defaults
[cmake] -- FMA:               Using architecture defaults
[cmake] -- AVX512:            Using architecture defaults
[cmake] -- AVX512DQ:          Using architecture defaults
[cmake] -- Altivec:           Using architecture defaults
[cmake] -- VSX:               Using architecture defaults
[cmake] -- MIPS MSA:          Using architecture defaults
[cmake] -- ARM NEON:          Using architecture defaults
[cmake] -- ARMv8 NEON:        Using architecture defaults
[cmake] -- S390X ZVECTOR:     Using architecture defaults
[cmake] -- C++11:             OFF
[cmake] -- SYCL:              OFF
[cmake] -- CUDA:              OFF
[cmake] -- HIP:               OFF
[cmake] -- 
[cmake] CXX:               /bin/x86_64-linux-gnu-g++-9
[cmake]  CXX_VERSION:       x86_64-linux-gnu-g++-9 (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
[cmake]  CXX_FLAGS:          -std=c++03 -pedantic -Wall -Wextra -Wundef -Wcast-align -Wchar-subscripts -Wnon-virtual-dtor -Wunused-local-typedefs -Wpointer-arith -Wwrite-strings -Wformat-security -Wlogical-op -Wdouble-promotion -Wshadow -Wno-psabi -Wno-variadic-macros -Wno-long-long -fno-check-new -fno-common -fstrict-aliasing -ansi
[cmake]  Sparse lib flags:   
[cmake] 
[cmake] -- ************************************************************
[cmake] -- 
[cmake] -- Configured Eigen 3.4.0
[cmake] -- 
[cmake] -- Available targets (use: make TARGET):
[cmake] -- ---------+--------------------------------------------------------------
[cmake] -- Target   |   Description
[cmake] -- ---------+--------------------------------------------------------------
[cmake] -- install  | Install Eigen. Headers will be installed to:
[cmake] --          |     <CMAKE_INSTALL_PREFIX>/<INCLUDE_INSTALL_DIR>
[cmake] --          |   Using the following values:
[cmake] --          |     CMAKE_INSTALL_PREFIX: /usr/local
[cmake] --          |     INCLUDE_INSTALL_DIR:  include/eigen3
[cmake] --          |   Change the install location of Eigen headers using:
[cmake] --          |     cmake . -DCMAKE_INSTALL_PREFIX=yourprefix
[cmake] --          |   Or:
[cmake] --          |     cmake . -DINCLUDE_INSTALL_DIR=yourdir
[cmake] -- doc      | Generate the API documentation, requires Doxygen & LaTeX
[cmake] -- check    | Build and run the unit-tests. Read this page:
[cmake] --          |   http://eigen.tuxfamily.org/index.php?title=Tests
[cmake] -- blas     | Build BLAS library (not the same thing as Eigen)
[cmake] -- uninstall| Remove files installed by the install target
[cmake] -- ---------+--------------------------------------------------------------
[cmake] -- 
[cmake] -- Configuring done
[cmake] -- Generating done
[cmake] -- Build files have been written to: /home/christian/Desktop/Bachelor-Arbeit/build
